<?xml version='1.0' encoding='utf-8'?>
<article xmlns='http://docbook.org/ns/docbook' version='5.0'
  xmlns:xlink='http://www.w3.org/1999/xlink' xml:lang='zh-CN'>
  <para>
    在<link xlink:href='http://easwy.com/blog/archives/vim-tips-advanced-substitute-2/' xlink:show='new'>上一篇文章</link>中，我们使用VIM的替换功能，实现高效的代码编写。本文将介绍另外一种方法，实现相同的功能。
  </para>
  <para>
    我们先看例子：
  </para>
  <programlisting>
UniqueID2       = lview.focusedItem.subItems.opIndex(0).text;
Parent          = lview.focusedItem.subItems.opIndex(0).text;
Children        = lview.focusedItem.subItems.opIndex(0).text;
login           = lview.focusedItem.subItems.opIndex(1).text;
txtCust.text    = lview.focusedItem.subItems.opIndex(2).text;
txtProj.text    = lview.focusedItem.subItems.opIndex(3).text;
txtbDate.text   = lview.focusedItem.subItems.opIndex(4).text;
txtdDate.text   = lview.focusedItem.subItems.opIndex(5).text;
txteDate.text   = lview.focusedItem.subItems.opIndex(6).text;
txtPM.text      = lview.focusedItem.subItems.opIndex(7).text;
txtLang.text    = lview.focusedItem.subItems.opIndex(8).text;
txtVendor.text  = lview.focusedItem.subItems.opIndex(9).text;
txtInvoice.text = lview.focusedItem.subItems.opIndex(10).text;
txtPMFund.text  = lview.focusedItem.subItems.opIndex(11).text;
txtProjFund.text= lview.focusedItem.subItems.opIndex(12).text;
txtA_No.text    = lview.focusedItem.subItems.opIndex(13).text;
txtNotes.text   = lview.focusedItem.subItems.opIndex(14).text;
txtStatus.text  = lview.focusedItem.subItems.opIndex(15).text; </programlisting>
  <para>
    我们要把上面代码中括号中的数字，替换成由0开始的一个顺序递增序列，例如：
  </para>
  <programlisting>
    UniqueID2       = lview.focusedItem.subItems.opIndex(0).text;
    Parent          = lview.focusedItem.subItems.opIndex(1).text;
    Children        = lview.focusedItem.subItems.opIndex(2).text;
    ......
  </programlisting>
  <para>
    实现以上需求，除了用前面介绍的方法外，还可以用下面的命令：
  </para>
  <programlisting>
:let n=0 | g/opIndex(\zs\d\+/s//\=n/|let n+=1 </programlisting>
  <para>
    这条命令同<link xlink:href='http://easwy.com/blog/archives/vim-tips-advanced-substitute-2/' xlink:show='new'>上一篇</link>介绍的命令类似，它也使用了VIM的替换功能和表达式，不同之处在于它并不需要事先选中替换区域，因为它没有使用"line()"函数来计算当前位置的偏移，而是直接使用变量来进行赋值。
  </para>
  <para>
    下面简单讲解一下这条命令各个组成元素：
  </para>
  <programlisting>
    <emphasis role='bold'>let</emphasis>          为变量赋值 (:help let )
    <emphasis role='bold'>|</emphasis>            用来分隔不同的命令 (:help :bar )
    <emphasis role='bold'>g</emphasis>            在匹配后面模式的行中执行指定的ex命令 (:help :g )
    <emphasis role='bold'>\zs</emphasis>          指明匹配由此开始 (:help /\zs )
    <emphasis role='bold'>\d\+</emphasis>         查找1个或多个数字 (:help /\d )
    <emphasis role='bold'>s</emphasis>            在选中的区域中进行替换 (:help :s )
    <emphasis role='bold'>\=</emphasis>           指明后面是一个表达式 (:help :s\= ) </programlisting>
  <para>
    所以，这条命令的执行过程为：
  </para>
  <orderedlist>
    <listitem>
      给变量n赋值为0；
    </listitem>
    <listitem>
      查找模式"opIndex(\zs\d\+"，使用变量n的值替换匹配的模式字符串；
    </listitem>
    <listitem>
      给变量n加1；
    </listitem>
    <listitem>
      回第二步；
    </listitem>
  </orderedlist>
  <para>
    需要说明一下"|"，它用来分隔不同的命令。
  </para>
  <para>
    另外，在substitute命令中，如果省略匹配模式字符串，它会使用之前定义的匹配模式字符串，在本例中就是由"global"命令定义的"opIndex(\zs\d\+"。
  </para>
  <para>
    除了上面介绍的方法外，还有一个VIM插件专门实现数字、日期等的增、减，可以在下面的网址下载此插件：
  </para>
  <para>
    <link xlink:href='http://vim.sourceforge.net/scripts/script.php?script_id=670' xlink:show='new'/>
  </para>
  <para>
    或
  </para>
  <para>
    <link xlink:href='http://mysite.verizon.net/astronaut/vim/index.html#VISINCR' xlink:show='new'/>
  </para>
  <section>[参考文档]</section>
  <itemizedlist>
    <listitem>
      VIM邮件列表，2007/01/29， 邮件标题："replace with a number sequence"
    </listitem>
  </itemizedlist>
</article>
