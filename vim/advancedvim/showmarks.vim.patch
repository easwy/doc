--- easwy/showmarks.vim	2007-03-13 10:15:07.000000000 +0800
+++ plugin/showmarks.vim	2007-03-23 09:35:01.000000000 +0800
@@ -144,6 +144,25 @@
 hi default ShowMarksHLo ctermfg=darkblue ctermbg=blue cterm=bold guifg=blue guibg=lightblue gui=bold
 hi default ShowMarksHLm ctermfg=darkblue ctermbg=blue cterm=bold guifg=blue guibg=lightblue gui=bold
 
+" Function: GetMarkLine()
+" Authors: Easwy Yang
+" Description: This function will return the line number where the mark
+" placed. In VIM 7.0 and later, function line() always returns line number but
+" not 0 in case an uppercase mark or number mark is placed. However, in VIM 6,
+" it only returns 0 when the uppercase mark isn't placed in current file.
+fun! s:GetMarkLine(mark)
+    if v:version < 700
+        let lnum = line(a:mark)
+    else
+        let pos = getpos(a:mark)
+        let lnum = pos[1]
+        if pos[0] && bufnr("%") != pos[0]
+            let lnum = 0
+        endif
+    endif
+    return lnum
+endf
+
 " Function: IncludeMarks()
 " Description: This function returns the list of marks (in priority order) to
 " show in this buffer.  Each buffer, if not already set, inherits the global
@@ -354,7 +373,8 @@
 		let c = strpart(s:IncludeMarks(), n, 1)
 		let nm = s:NameOfMark(c)
 		let id = n + (s:maxmarks * winbufnr(0))
-		let ln = line("'".c)
+		"let ln = line("'".c)
+		let ln = s:GetMarkLine("'".c)
 
 		if ln == 0 && (exists('b:placed_'.nm) && b:placed_{nm} != ln)
 			exe 'sign unplace '.id.' buffer='.winbufnr(0)
@@ -393,11 +413,18 @@
 	let s:maxmarks = strlen(s:IncludeMarks())
 	while n < s:maxmarks
 		let c = strpart(s:IncludeMarks(), n, 1)
-		if c =~# '[a-zA-Z]' && ln == line("'".c)
+		"if c =~# '[a-zA-Z]' && ln == line("'".c)
+		if c =~# '[a-zA-Z]' && ln == s:GetMarkLine("'".c)
 			let nm = s:NameOfMark(c)
 			let id = n + (s:maxmarks * winbufnr(0))
 			exe 'sign unplace '.id.' buffer='.winbufnr(0)
-			exe '1 mark '.c
+            " Easwy, we can really remove marks in VIM 7.0 and later
+            if v:version >= 700
+                exe 'delm '.c
+            else
+                exe '1 mark '.c
+            endif
+            " Easwy, end
 			let b:placed_{nm} = 1
 		endif
 		let n = n + 1
@@ -417,7 +444,13 @@
 			let nm = s:NameOfMark(c)
 			let id = n + (s:maxmarks * winbufnr(0))
 			exe 'sign unplace '.id.' buffer='.winbufnr(0)
-			exe '1 mark '.c
+            " Easwy, we can really remove marks in VIM 7.0 and later
+            if v:version >= 700
+                exe 'delm '.c
+            else
+                exe '1 mark '.c
+            endif
+            " Easwy, end
 			let b:placed_{nm} = 1
 		endif
 		let n = n + 1
@@ -466,7 +499,8 @@
 	while n < s:maxmarks
 		let c = strpart(s:IncludeMarks(), n, 1)
 		if c =~# '[a-z]'
-			if line("'".c) <= 1
+			"if line("'".c) <= 1
+			if s:GetMarkLine("'".c) <= 1
 				" Found an unused [a-z] mark; we're done.
 				let next_mark = n
 				break
