<chapter xml:id='auto_complete'
  xmlns:xlink='http://www.w3.org/1999/xlink'>
  <title>自动补全</title>
  &tocatalog;
  <para>
    本节所用命令的帮助入口：
  </para>
  <programlisting>
:help compl-generic
:help 'complete'
:help ins-completion </programlisting>
  <para>
    上篇文章介绍了<link xlink:href='&uri_omni_complete;' xlink:show='new'>vim的智能补全(omni补全)</link>，本篇主要介绍vim提供的其它补全方式。
  </para>
  <para>
    除智能补全外，最常用的补全方式应该是<command>CTRL-N</command>和<command>CTRL-P</command>补全了。它们会在当前缓冲区、其它缓冲区，以及当前文件所包含的头文件中查找以光标前关键字开始的单词。智能补全不能对局部变量进行补全，而<command>CTRL-N</command>和<command>CTRL-P</command>补全则可以很好的胜任。
  </para>
  <para>
    下图是采用<command>CTRL-P</command>补全的一个例子，输出字符"pa"，然后按<command>CTRL-P</command>，vim会在下拉菜单中列出所有的匹配功能供选择，此时再按一下<command>CTRL-P</command>，就选中了第一个项目，也就是我想输入的"parmp"。我们第一次输入<command>CTRL-P</command>的是进行补全，第二次输入的<command>CTRL-P</command>是在下拉菜单中向上选择，二者的含义是不同的。
  </para>
  <para>
    我们知道，<command>CTRL-P</command>一般的含义是向上，因此<command>CTRL-P</command>补全是向上查找以进行补全，而<command>CTRL-N</command>是向下查找以进行补全，在不同场合使用不同的快捷键可以加速补全的速度。
  </para>
  <informalfigure>
    <mediaobject>
      <alt>CTRL-P补全抓图</alt>
      <imageobject>
        <imagedata fileref='http://easwy.com/blog/uploads/2009/03/ctrl_p_complete-300x223.jpg' align='center'/>
      </imageobject>
    </mediaobject>
    <caption align='center'><link xlink:href='http://easwy.com/blog/uploads/2009/03/ctrl_p_complete.jpg' xlink:show='new'>点击查看大图</link></caption>
  </informalfigure>
  <para>
    使用<command>CTRL-N</command>和<command>CTRL-P</command>补全时，由'<emphasis>complete</emphasis>'选项控制vim从哪些地方查找补全的内容。例如，对于比较大的软件项目，文件包含关系复杂，如果<command>CTRL-N</command>和<command>CTRL-P</command>补全时查找所包含的头文件，耗时会比较久。此时，可以在'<emphasis>complete</emphasis>'选项中去掉'<emphasis>i</emphasis>'标记，这样<command>CTRL-N</command>和<command>CTRL-P</command>补全就不在头文件中查找了，速度会快很多；当然，弊端就是你无法对头文件中出现的某些内容进行补全了。'<emphasis>complete</emphasis>'选项中其它标记的含义，请阅读手册页。
  </para>
  <para>
    vim中其它的补全方式包括：
  </para>
  <programlisting>
整行补全                        <command>CTRL-X CTRL-L</command>
根据当前文件里关键字补全        <command>CTRL-X CTRL-N</command>
根据字典补全                    <command>CTRL-X CTRL-K</command>
根据同义词字典补全              <command>CTRL-X CTRL-T</command>
根据头文件内关键字补全          <command>CTRL-X CTRL-I</command>
根据标签补全                    <command>CTRL-X CTRL-]</command>
补全文件名                      <command>CTRL-X CTRL-F</command>
补全宏定义                      <command>CTRL-X CTRL-D</command>
补全vim命令                     <command>CTRL-X CTRL-V</command>
用户自定义补全方式              <command>CTRL-X CTRL-U</command>
拼写建议                        <command>CTRL-X CTRL-S</command> </programlisting>
  <para>
    例如，当我们按下"<command>CTRL-X CTRL-F</command>"时，vim就会弹出下拉菜单，显示出当前目录下的可选目录和文件，如下图所示。这样，在输入文件名时方便多了。
  </para>
  <informalfigure>
    <mediaobject>
      <alt>c++ omni补全抓图</alt>
      <imageobject>
        <imagedata fileref='http://easwy.com/blog/uploads/2009/03/ctrl_x_f_complete-300x221.jpg' align='center'/>
      </imageobject>
    </mediaobject>
    <caption align='center'><link xlink:href='http://easwy.com/blog/uploads/2009/03/ctrl_x_f_complete.jpg' xlink:show='new'>点击查看大图</link></caption>
  </informalfigure>
  <para>
    灵活的运用这些补全方式，甚至自定义自己的补全方式，可以使你的工作更加高效。
  </para>
  <para>
    可以在vimrc中定义下面的键绑定，以减少按键次数：
  </para>
  <programlisting>
inoremap &lt;C-]&gt;             &lt;C-X&gt;&lt;C-]&gt;
inoremap &lt;C-F&gt;             &lt;C-X&gt;&lt;C-F&gt;
inoremap &lt;C-D&gt;             &lt;C-X&gt;&lt;C-D&gt;
inoremap &lt;C-L&gt;             &lt;C-X&gt;&lt;C-L&gt; </programlisting>
  <para>
    SuperTab插件会记住你上次所使用的补全方式，下次再补全时，直接使用TAB，就可以重复这种类型的补全。比如，上次你使用<command>CTRL-X CTRL-F</command>进行了文件名补全，接下来，你就可以使用TAB来继续进行文件名补全，直到你再使用上面列出的补全命令进行了其它形式的补全。这个插件在下面的链接下载：
  </para>
  <para>
    <link xlink:href='http://www.vim.org/scripts/script.php?script_id=1643' xlink:show='new'/>
  </para>
  <para>
    下载后，把它放到.vim/plugin目录就可以了。
  </para>
  <para>
    可以对下面两个选项进行配置，以调整SuperTab的缺省行为：
  </para>
  <itemizedlist>
    <listitem>
      <emphasis>g:SuperTabRetainCompletionType</emphasis>的值缺省为1，意为记住你上次的补全方式，直到使用其它的补全命令改变它；如果把它设成2，意味着记住上次的补全方式，直到按ESC退出插入模式为止；如果设为0，意味着不记录上次的补全方式。
    </listitem>
    <listitem>
      <emphasis>g:SuperTabDefaultCompletionType</emphasis>的值设置缺省的补全方式，缺省为<command>CTRL-P</command>。
    </listitem>
  </itemizedlist>
  <para>
    你可以在vimrc中设置这两个变量，例如：
  </para>
  <programlisting>
let g:SuperTabRetainCompletionType = 2
let g:SuperTabDefaultCompletionType = "&lt;C-X&gt;&lt;C-O&gt;" </programlisting>
  <para>
    现在你可以使用TAB来进行补全了，就像在shell中那样，方便了很多！
  </para>
  <para>
    <emphasis role='bold'>[参考文档]</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      vim手册
    </listitem>
    <listitem>
      <link xlink:href='http://vimcdoc.sourceforge.net/' xlink:show='new'>vim中文手册</link>
    </listitem>
  </itemizedlist>

  &tocatalog;
  &copyright;
  <para><emphasis role='bold'>　　　　本文链接地址:</emphasis> <link xlink:href='&uri_auto_complete;'/></para>
</chapter>
